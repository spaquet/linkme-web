---
import Layout from '../../layouts/Layout.astro';
import Container from '../../components/common/Container.astro';
import DocSidebar from '../../components/docs/DocSidebar.astro';
import { getCollection, getEntry } from 'astro:content';

// Define dynamic route paths
// This will be enhanced when we implement the content collection for docs
export async function getStaticPaths() {
  // In future, we'll use:
  // const docs = await getCollection('docs');
  // return docs.map((doc) => ({
  //   params: { slug: doc.slug },
  // }));
  
  // For now, return static paths for the docs we've defined
  return [
    // Getting Started
    { params: { slug: 'introduction' } },
    { params: { slug: 'creating-account' } },
    { params: { slug: 'digital-business-card' } },
    
    // Features - Using nested array format for nested routes
    { params: { slug: 'features/digital-business-cards' } },
    { params: { slug: 'features/contact-management' } },
    { params: { slug: 'features/network-intelligence' } },
    { params: { slug: 'features/micro-communities' } },
    
    // Integrations
    { params: { slug: 'integrations/slack' } },
    { params: { slug: 'integrations/crm' } },
    { params: { slug: 'integrations/calendar' } },
    
    // API
    { params: { slug: 'api/overview' } },
    { params: { slug: 'api/authentication' } },
    { params: { slug: 'api/endpoints' } },
  ];
}

// Cache the pages for 1 hour (3600 seconds)
Astro.response.headers.set('Cache-Control', 'public, max-age=3600, must-revalidate');

// Get the slug from params and ensure it's a string
const { slug } = Astro.params;
const slugPath = Array.isArray(slug) ? slug.join('/') : slug;

// In the future, we'll fetch the actual doc content:
// const doc = await getEntry('docs', slugPath);
// const { Content } = await doc.render();

// For now, create placeholder data based on the slug
const slugParts = slugPath.split('/');
const baseName = slugParts[slugParts.length - 1];
const formattedTitle = baseName
  .split('-')
  .map(word => word.charAt(0).toUpperCase() + word.slice(1))
  .join(' ');

// Determine the category from the slug
let category = "Getting Started";
if (slugPath.startsWith('features/')) {
  category = "Features";
} else if (slugPath.startsWith('integrations/')) {
  category = "Integrations";
} else if (slugPath.startsWith('api/')) {
  category = "API Documentation";
}

export const revalidate = 3600;
---

<Layout
  title={`${formattedTitle} | LinkMe Documentation`}
  description={`Learn about ${formattedTitle} in the LinkMe documentation.`}
  canonicalURL={new URL(`/docs/${slugPath}/`, Astro.site)}
  pageType="website">
  
  <section class="py-16 md:py-24 bg-white dark:bg-gray-900">
    <Container>
      <div class="flex flex-col md:flex-row gap-8">
        <!-- Sidebar Navigation -->
        <DocSidebar currentSlug={slugPath} />
        
        <!-- Main Content -->
        <div class="flex-1">
          <div class="mb-6">
            <div class="text-sm text-gray-500 dark:text-gray-400 mb-2">
              <a href="/docs/" class="hover:text-indigo-600 dark:hover:text-indigo-400">Docs</a> &gt; 
              <span>{category}</span> &gt; 
              <span class="text-gray-700 dark:text-gray-300">{formattedTitle}</span>
            </div>
            <h1 class="text-3xl md:text-4xl font-bold text-gray-900 dark:text-white mb-4">
              {formattedTitle}
            </h1>
            <div class="flex items-center text-sm text-gray-500 dark:text-gray-400 mb-8">
              <span>Last updated: April 20, 2025</span>
            </div>
          </div>
          
          <!-- Placeholder content until we implement the content collection -->
          <div class="prose dark:prose-invert max-w-none text-gray-600 dark:text-gray-300">
            <p class="text-lg mb-4">
              This is a placeholder for the {formattedTitle} documentation page. In the future, this content will come from the docs content collection.
            </p>
            
            <h2>Overview</h2>
            <p>
              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam euismod, nisl eget aliquam ultricies, nunc nisl aliquet nunc, vitae aliquam nisl nunc eu nisl. Nullam euismod, nisl eget aliquam ultricies, nunc nisl aliquet nunc, vitae aliquam nisl nunc eu nisl.
            </p>
            
            <h2>Getting Started</h2>
            <p>
              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam euismod, nisl eget aliquam ultricies, nunc nisl aliquet nunc, vitae aliquam nisl nunc eu nisl.
            </p>
            
            <h2>Features</h2>
            <ul>
              <li>Feature 1: Lorem ipsum dolor sit amet, consectetur adipiscing elit.</li>
              <li>Feature 2: Nullam euismod, nisl eget aliquam ultricies, nunc nisl aliquet nunc.</li>
              <li>Feature 3: Vitae aliquam nisl nunc eu nisl.</li>
            </ul>
            
            <div class="bg-gray-100 dark:bg-gray-700 p-4 rounded-lg my-6">
              <h3 class="font-semibold text-gray-900 dark:text-white mb-2">Tip</h3>
              <p class="text-gray-600 dark:text-gray-300 m-0">
                Pro tip: You can access this feature directly from your mobile app by tapping the "+" button in the bottom navigation bar.
              </p>
            </div>
            
            <p>
              For more information about {formattedTitle}, please refer to our <a href="/faq/" class="text-indigo-600 dark:text-indigo-400 hover:underline">FAQ</a> or contact <a href="/support/" class="text-indigo-600 dark:text-indigo-400 hover:underline">support</a>.
            </p>
          </div>
          
          <!-- Page navigation -->
          <div class="mt-12 border-t border-gray-200 dark:border-gray-700 pt-6 flex justify-between items-center">
            <a 
              href="#" 
              class="text-indigo-600 dark:text-indigo-400 hover:underline flex items-center"
            >
              <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
              </svg>
              Previous Article
            </a>
            <a 
              href="#"
              class="text-indigo-600 dark:text-indigo-400 hover:underline flex items-center"
            >
              Next Article
              <svg class="w-4 h-4 ml-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
              </svg>
            </a>
          </div>
        </div>
      </div>
    </Container>
  </section>
</Layout>