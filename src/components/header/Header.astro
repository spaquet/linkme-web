---
// src/components/header/Header.astro
import Container from "../common/Container.astro";
import Navigation from "./Navigation.astro";
import Button from "../common/Button.astro";
---

<header class="w-full py-4 border-b border-gray-800 bg-[#1E1E1E] fixed top-0 z-40">
  <Container>
    <div class="flex items-center justify-between">
      <!-- Logo only, no text next to it -->
      <div class="flex items-center">
        <a href="/" class="flex items-center">
          <img src="/images/logos/linkme-logo.svg" alt="LinkMe Logo" class="h-8 w-auto" />
        </a>
      </div>
      
      <!-- Navigation for desktop -->
      <div class="hidden md:flex items-center space-x-8">
        <Navigation />
      </div>
      
      <!-- CTA Buttons - Updated to "Sign In" and "Get Started" -->
      <div class="hidden md:flex items-center space-x-4">
        <a href="https://getlinkme.io/" class="text-sm font-medium text-white hover:text-indigo-300 transition-colors duration-200">
          Sign In
        </a>
        <Button href="https://getlinkme.io/signup/" variant="primary">
          Get Started
        </Button>
      </div>
      
      <!-- Mobile Menu Button -->
      <div class="flex md:hidden">
        <button
          type="button"
          id="menu-toggle"
          class="text-white hover:text-indigo-300 focus:outline-none p-2 -m-2 touch-manipulation transition-colors duration-200"
          aria-label="Toggle navigation menu"
          style="min-height: 44px; min-width: 44px;"
        >
          <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 transition-transform duration-200" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
          </svg>
        </button>
      </div>
    </div>
    
    <!-- Mobile Navigation (Beautiful overlay style) -->
    <div 
      id="mobile-menu" 
      class="absolute left-0 right-0 top-full bg-[#1E1E1E] md:hidden transform transition-all duration-300 ease-in-out translate-y-[-100%] opacity-0 z-30 border-b border-gray-800 shadow-2xl"
      style="visibility: hidden;"
    >
      <div class="px-6 py-6 bg-gradient-to-b from-[#1E1E1E] to-[#141414]">
        <!-- Navigation Links with beautiful styling -->
        <nav class="space-y-1">
          <Navigation isMobile={true} />
        </nav>
        
        <!-- Divider -->
        <div class="my-6 border-t border-gray-700/50"></div>
        
        <!-- CTA Buttons for mobile -->
        <div class="space-y-3">
          <a 
            href="https://getlinkme.io/" 
            class="block w-full text-center py-3 px-4 text-white hover:text-indigo-300 font-medium transition-all duration-200 hover:bg-gray-800/50 rounded-lg"
          >
            Sign In
          </a>
          <a 
            href="https://getlinkme.io/signup/" 
            class="block w-full text-center bg-indigo-600 hover:bg-indigo-700 text-white font-medium py-3 px-4 rounded-lg transition-all duration-200 shadow-lg hover:shadow-xl transform hover:scale-105"
          >
            Get Started
          </a>
        </div>
      </div>
    </div>
  </Container>
  
  <!-- Mobile menu backdrop -->
  <div 
    id="mobile-backdrop" 
    class="fixed inset-0 bg-black/50 backdrop-blur-sm md:hidden opacity-0 z-20"
    style="visibility: hidden; pointer-events: none;"
  ></div>
</header>

<script>
document.addEventListener('DOMContentLoaded', () => {
  const menuToggle = document.getElementById('menu-toggle');
  const mobileMenu = document.getElementById('mobile-menu');
  const mobileBackdrop = document.getElementById('mobile-backdrop');
  
  if (menuToggle && mobileMenu && mobileBackdrop) {
    let isToggling = false;
    let isMenuOpen = false;
    
    const toggleMenu = (e) => {
      e.preventDefault();
      e.stopPropagation();
      
      if (isToggling) return;
      isToggling = true;
      
      // Force a repaint to ensure Safari recognizes the changes
      mobileMenu.offsetHeight;
      
      if (isMenuOpen) {
        // Close menu
        mobileMenu.style.visibility = 'hidden';
        mobileMenu.style.transform = 'translateY(-100%)';
        mobileMenu.style.opacity = '0';
        
        mobileBackdrop.style.visibility = 'hidden';
        mobileBackdrop.style.opacity = '0';
        mobileBackdrop.style.pointerEvents = 'none';
        
        document.body.style.overflow = '';
        document.body.style.position = '';
        document.body.style.width = '';
        
        // Reset hamburger icon
        const svg = menuToggle.querySelector('svg');
        if (svg) {
          svg.style.transform = 'rotate(0deg)';
          const path = svg.querySelector('path');
          if (path) {
            path.setAttribute('d', 'M4 6h16M4 12h16M4 18h16');
          }
        }
        
        isMenuOpen = false;
      } else {
        // Open menu
        mobileMenu.style.visibility = 'visible';
        mobileMenu.style.transform = 'translateY(0)';
        mobileMenu.style.opacity = '1';
        
        mobileBackdrop.style.visibility = 'visible';
        mobileBackdrop.style.opacity = '1';
        mobileBackdrop.style.pointerEvents = 'auto';
        
        // Prevent body scroll on Safari
        document.body.style.overflow = 'hidden';
        document.body.style.position = 'fixed';
        document.body.style.width = '100%';
        
        // Change to X icon
        const svg = menuToggle.querySelector('svg');
        if (svg) {
          svg.style.transform = 'rotate(90deg)';
          const path = svg.querySelector('path');
          if (path) {
            path.setAttribute('d', 'M6 18L18 6M6 6l12 12');
          }
        }
        
        isMenuOpen = true;
      }
      
      setTimeout(() => {
        isToggling = false;
      }, 100);
    };
    
    // Use touchstart for better Safari performance, fallback to click
    const isTouchDevice = 'ontouchstart' in window;
    
    if (isTouchDevice) {
      menuToggle.addEventListener('touchstart', toggleMenu, { passive: false });
    } else {
      menuToggle.addEventListener('click', toggleMenu);
    }
    
    // Close menu when clicking backdrop
    mobileBackdrop.addEventListener('click', () => {
      if (isMenuOpen) {
        toggleMenu({ preventDefault: () => {}, stopPropagation: () => {} });
      }
    });
    
    // Also handle touchstart on backdrop for touch devices
    if (isTouchDevice) {
      mobileBackdrop.addEventListener('touchstart', (e) => {
        if (isMenuOpen) {
          e.preventDefault();
          toggleMenu({ preventDefault: () => {}, stopPropagation: () => {} });
        }
      }, { passive: false });
    }
    
    // Close mobile menu when clicking outside
    document.addEventListener('click', (event) => {
      if (!menuToggle.contains(event.target) && 
          !mobileMenu.contains(event.target) && 
          isMenuOpen) {
        toggleMenu({ preventDefault: () => {}, stopPropagation: () => {} });
      }
    });
    
    // Close menu on escape key
    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape' && isMenuOpen) {
        toggleMenu({ preventDefault: () => {}, stopPropagation: () => {} });
      }
    });
    
    // Handle orientation change on mobile Safari
    window.addEventListener('orientationchange', () => {
      if (isMenuOpen) {
        setTimeout(() => {
          // Force a recalculation after orientation change
          mobileMenu.style.transform = 'translateY(0)';
        }, 100);
      }
    });
  }
});
</script>

<style>
/* Improve mobile touch interactions */
.touch-manipulation {
  touch-action: manipulation;
}

/* Custom animation for hamburger */
svg {
  transition: transform 0.2s ease-in-out;
}

/* Prevent body scroll when menu is open */
body.overflow-hidden {
  overflow: hidden;
  position: fixed;
  width: 100%;
}
</style>