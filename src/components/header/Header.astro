---
// src/components/header/Header.astro
import Container from "../common/Container.astro";
import Navigation from "./Navigation.astro";
import Button from "../common/Button.astro";
---

<header class="w-full py-4 border-b border-gray-800 bg-[#1E1E1E] fixed top-0 z-40">
  <Container>
    <div class="flex items-center justify-between h-8">
      <!-- Logo only, no text next to it -->
      <div class="flex items-center">
        <a href="/" class="flex items-center">
          <img src="/images/logos/linkme-logo.svg" alt="LinkMe Logo" class="h-8 w-auto" />
        </a>
      </div>
      
      <!-- Navigation for desktop -->
      <div class="hidden md:flex items-center space-x-8">
        <Navigation />
      </div>
      
      <!-- CTA Buttons - Updated to "Sign In" and "Get Started" -->
      <div class="hidden md:flex items-center space-x-4">
        <a href="https://getlinkme.io/" class="text-sm font-medium text-white hover:text-indigo-300 transition-colors duration-200">
          Sign In
        </a>
        <Button href="https://getlinkme.io/signup/" variant="primary">
          Get Started
        </Button>
      </div>
      
      <!-- Mobile Menu Button - Properly centered and with better touch handling -->
      <div class="flex md:hidden items-center justify-center">
        <button
          type="button"
          id="mobile-menu-button"
          class="flex items-center justify-center text-white hover:text-indigo-300 focus:outline-none transition-colors duration-200 active:scale-95"
          aria-label="Toggle navigation menu"
          style="width: 44px; height: 44px; touch-action: manipulation; -webkit-tap-highlight-color: transparent;"
        >
          <svg id="hamburger-icon" xmlns="http://www.w3.org/2000/svg" class="w-6 h-6" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
            <path stroke-linecap="round" stroke-linejoin="round" d="M4 6h16M4 12h16M4 18h16" />
          </svg>
        </button>
      </div>
    </div>
  </Container>
  
  <!-- Mobile Navigation (Full screen overlay) -->
  <div 
    id="mobile-menu" 
    class="fixed inset-0 bg-[#1E1E1E] z-50 flex-col items-center justify-center hidden md:hidden"
  >
    <!-- Close button -->
    <div class="absolute top-6 right-6">
      <button 
        id="close-menu-button" 
        class="flex items-center justify-center text-white hover:text-indigo-300 focus:outline-none transition-colors duration-200 active:scale-95"
        aria-label="Close navigation menu"
        style="width: 48px; height: 48px; touch-action: manipulation; -webkit-tap-highlight-color: transparent;"
      >
        <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
          <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12" />
        </svg>
      </button>
    </div>
    
    <!-- Navigation content -->
    <div class="flex flex-col items-center gap-8 text-xl">
      <Navigation isMobile={true} />
      
      <!-- Mobile CTA buttons -->
      <div class="flex flex-col items-center gap-4 mt-8">
        <a 
          href="https://getlinkme.io/" 
          class="text-lg font-medium text-white hover:text-indigo-300 transition-colors duration-200"
        >
          Sign In
        </a>
        <a 
          href="https://getlinkme.io/signup/" 
          class="bg-indigo-600 hover:bg-indigo-700 text-white font-medium py-3 px-8 rounded-lg transition-all duration-200 shadow-lg hover:shadow-xl"
        >
          Get Started
        </a>
      </div>
    </div>
  </div>
</header>

<script>
document.addEventListener('DOMContentLoaded', () => {
  const mobileMenuButton = document.getElementById('mobile-menu-button');
  const closeMenuButton = document.getElementById('close-menu-button');
  const mobileMenu = document.getElementById('mobile-menu');
  
  if (mobileMenuButton && closeMenuButton && mobileMenu) {
    // Check if device supports touch
    const isTouchDevice = 'ontouchstart' in window || navigator.maxTouchPoints > 0;
    
    // Open mobile menu
    const openMenu = (e) => {
      e.preventDefault();
      e.stopPropagation();
      
      mobileMenu.classList.remove('hidden');
      mobileMenu.classList.add('flex');
      document.body.style.overflow = 'hidden';
      document.body.style.position = 'fixed';
      document.body.style.width = '100%';
      
      // Change icon to X
      const icon = mobileMenuButton.querySelector('svg path');
      if (icon) {
        icon.setAttribute('d', 'M6 18L18 6M6 6l12 12');
      }
    };
    
    // Close mobile menu
    const closeMenu = (e) => {
      if (e) {
        e.preventDefault();
        e.stopPropagation();
      }
      
      mobileMenu.classList.remove('flex');
      mobileMenu.classList.add('hidden');
      document.body.style.overflow = '';
      document.body.style.position = '';
      document.body.style.width = '';
      
      // Change icon back to hamburger
      const icon = mobileMenuButton.querySelector('svg path');
      if (icon) {
        icon.setAttribute('d', 'M4 6h16M4 12h16M4 18h16');
      }
    };
    
    // Add appropriate event listeners based on device type
    if (isTouchDevice) {
      // Use touchstart for touch devices
      mobileMenuButton.addEventListener('touchstart', openMenu, { passive: false });
      closeMenuButton.addEventListener('touchstart', closeMenu, { passive: false });
      
      // Also add click as fallback
      mobileMenuButton.addEventListener('click', openMenu);
      closeMenuButton.addEventListener('click', closeMenu);
    } else {
      // Use click for non-touch devices
      mobileMenuButton.addEventListener('click', openMenu);
      closeMenuButton.addEventListener('click', closeMenu);
    }
    
    // Close menu when clicking outside content
    mobileMenu.addEventListener('click', (e) => {
      if (e.target === mobileMenu) {
        closeMenu(e);
      }
    });
    
    // Close menu on escape key
    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape' && !mobileMenu.classList.contains('hidden')) {
        closeMenu();
      }
    });
    
    // Prevent double-tap zoom on buttons
    [mobileMenuButton, closeMenuButton].forEach(button => {
      button.addEventListener('touchend', (e) => {
        e.preventDefault();
      });
    });
  }
});
</script>

<style>
/* Ensure buttons are properly styled for touch */
button {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

/* Remove tap highlights on webkit browsers */
button, a {
  -webkit-tap-highlight-color: transparent;
}
</style>