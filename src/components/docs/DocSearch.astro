---
// DocSearch.astro - A search component for the documentation section
---

<div class="mb-8 w-full">
  <form class="relative">
    <input
      type="search"
      placeholder="Search documentation..."
      class="w-full py-2 pl-10 pr-4 text-sm bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-transparent"
    />
    <svg
      class="absolute left-3 top-2.5 h-4 w-4 text-gray-400 dark:text-gray-500"
      fill="none"
      stroke="currentColor"
      viewBox="0 0 24 24"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        stroke-linecap="round"
        stroke-linejoin="round"
        stroke-width="2"
        d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"
      ></path>
    </svg>
  </form>
</div>

<script>
  // This is a placeholder for future search functionality
  // We would implement actual search using a library like Algolia DocSearch,
  // or by creating our own search index with a tool like Lunr.js
  
  const searchInput = document.querySelector('input[type="search"]');
  if (searchInput) {
    searchInput.addEventListener('keypress', (e) => {
      if (e.key === 'Enter') {
        e.preventDefault();
        
        // For now, just redirect to a search results page
        // In the future, this would trigger a real search
        const query = encodeURIComponent(searchInput.value);
        window.location.href = `/docs/search?q=${query}`;
      }
    });
  }
</script>